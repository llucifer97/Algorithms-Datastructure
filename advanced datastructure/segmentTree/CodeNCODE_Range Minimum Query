#include<bits/stdc++.h>
#define REP(i,n) for (int i = 1; i <= n; i++)
#define mod 1000000007
#define pb push_back
#define ff first
#define ss second
#define ii pair<int,int>
#define vi vector<int>
#define vii vector<ii>
#define lli long long int
#define INF 1000000000
#define endl '\n'
const double PI = 3.141592653589793238460;
typedef std::complex<double> Complex;
typedef std::valarray<Complex> CArray;

using namespace std;
int st[400001] , arr[100001];

void build(int si , int ss , int se)
{
	if(ss == se)
	{
		st[si] = arr[ss];
		return;
	}
	
	int mid = (ss + se)/2;
	build(2*si , ss , mid);
	build(2*si+1 , mid+1 , se);
	
	st[si] = min(st[2*si] , st[2*si+1]);
}

int query(int si , int ss , int se , int qs , int qe)
{
	if(qe < ss || qs> se)
		return INF;
		
	if(ss>=qs && se<=qe)
		return st[si];
	
	int mid = (ss + se)/2;
	int l = query(2*si , ss , mid , qs , qe);
	int r = query(2*si+1 , mid+1 , se , qs , qe);
	
	return min(l , r);
}
int main()
{
	int n , q , l , r;
	
	cin>>n;
	REP(i , n)
		cin>>arr[i];
		
	cin>>q;
	build(1 , 1 , n);
	while(q--)
	{
		cin>>l>>r;
		cout<<query(1 , 1 , n , l+1 , r+1)<<endl;
	}
}
